<?php
namespace App\Traits;

use Illuminate\Support\Carbon;
use Illuminate\Support\Facades\Log;
use App\Models\User;

trait Paypal
{
    public function generateAccessToken()
    {

        $clientId = env('PAYPAL_CLIENT_ID');
        $clientSecret = env('PAYPAL_SECRET');

        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, "https://api.sandbox.paypal.com/v1/oauth2/token");
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSLVERSION, 6); //NEW ADDITION
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_USERPWD, $clientId . ":" . $clientSecret);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials&ignoreCache=true&return_authn_schemes=true&return_client_metadata=true&return_unconsented_scopes=true");

        $result = curl_exec($ch);

        curl_close($ch); //THIS CODE IS NOW WORKING!


        if (empty($result))
            return false;

        $json = json_decode($result);
        $token = $json->access_token;
        return $token;
    }

    public function generateInvoice($user)
    {

        $token = $this->generateAccessToken();
        if (!$token) return false;

        $currentDate = Carbon::now()->format('Y-m-d');

        $dueDate = Carbon::now()->addDays(10)->format('Y-m-d');
                // dd($dueDate);
        $userEmail = $user->email;
        $firstName = "Albert";
        $lastName = "James";
        $amount = 50.00;
        $domain = "https://bloom.superbuilderandmarketers.com/";
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api-m.sandbox.paypal.com/v2/invoicing/invoices');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        // curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n    \"detail\": {\n        \"invoice_number\": \"".rand(9, 999999)."\",\n        \"invoice_date\": \"".$currentDate."\",\n        \"payment_term\": {\n            \"term_type\": \"NET_10\",\n            \"due_date\": \"".$dueDate."\"\n        },\n        \"currency_code\": \"USD\",\n        \"note\": \"<A note to the invoice recipient. Also appears on the invoice notification email.>\",\n        \"terms_and_conditions\": \"<The general terms of the invoice. Can include return or cancellation policy and other terms and conditions.>\"\n    },\n    \"invoicer\": {\n        \"name\": {\n            \"given_name\": \"David\",\n            \"surname\": \"Larusso\"\n        },\n        \"website\": \"bloom.superbuilderandmarketers.com\"\n    },\n    \"primary_recipients\": [\n        {\n            \"billing_info\": {\n                \"name\": {\n                    \"given_name\": \"".$firstName."\",\n                    \"surname\": \"".$lastName."\"\n                },\n                \"email_address\": \"".$userEmail."\"\n            }\n        }\n    ],\n    \"items\": [\n        {\n            \"name\": \"Bloom API\",\n            \"description\": \"Bloom API usage charge\",\n            \"quantity\": \"1\",\n            \"unit_amount\": {\n                \"currency_code\": \"USD\",\n                \"value\": \"".$amount."\"\n            }\n        }\n    ],\n    \"configuration\": {\n        \"allow_tip\": true,\n        \"tax_calculated_after_discount\": true,\n        \"tax_inclusive\": false\n    },\n    \"amount\": {\n        \"breakdown\": {\n            \"custom\": {\n                \"label\": \"Bloom API\",\n                \"amount\": {\n                    \"currency_code\": \"USD\",\n                    \"value\": \"10.00\"\n                }\n            }\n        }\n    }\n}");
        curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n    \"detail\": {\n        \"invoice_number\": \"".rand(9, 999999)."\",\n        \"invoice_date\": \"".$currentDate."\",\n        \"payment_term\": {\n            \"term_type\": \"NET_10\",\n            \"due_date\": \"".$dueDate."\"\n        },\n        \"currency_code\": \"USD\",\n        \"note\": \"<A note to the invoice recipient. Also appears on the invoice notification email.>\",\n        \"terms_and_conditions\": \"<The general terms of the invoice. Can include return or cancellation policy and other terms and conditions.>\"\n    },\n    \"invoicer\": {\n        \"name\": {\n            \"given_name\": \"David\",\n            \"surname\": \"Larusso\"\n        },\n        \"website\": \"".$domain."\"\n    },\n    \"primary_recipients\": [\n        {\n            \"billing_info\": {\n                \"name\": {\n                    \"given_name\": \"".$firstName."\",\n                    \"surname\": \"".$lastName."\"\n                },\n                \"email_address\": \"".$userEmail."\"\n            }\n        }\n    ],\n    \"items\": [\n        {\n            \"name\": \"Bloom API\",\n            \"description\": \"Bloom API usage charge\",\n            \"quantity\": \"1\",\n            \"unit_amount\": {\n                \"currency_code\": \"USD\",\n                \"value\": \"".$amount."\"\n            }\n        }\n    ],\n    \"configuration\": {\n        \"allow_tip\": true,\n        \"tax_calculated_after_discount\": true,\n        \"tax_inclusive\": false\n    },\n    \"amount\": {\n        \"breakdown\": {\n            \"custom\": {\n                \"label\": \"Bloom API\",\n                \"amount\": {\n                    \"currency_code\": \"USD\",\n                    \"value\": \"".$amount."\"\n                }\n            }\n        }\n    }\n}");
        $headers = array();
        $headers[] = 'Content-Type: application/json';
        $headers[] = 'Paypal-Request-Id: 88506827-6626-4b55-bca8-0e41dc12cefe';
        $headers[] = 'Prefer: return=representation';
        $headers[] = 'Authorization: Bearer '.$token;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);

        if (curl_errno($ch)) {
            return false;
        }
        curl_close($ch);
        $result = json_decode($result);
        return $result;
    }

    public function sendInvoicesToUsers($invoiceId)
    {
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/

        $token = $this->generateAccessToken();
        if (!$token) return false;

        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api-m.sandbox.paypal.com/v2/invoicing/invoices/'.$invoiceId.'/send');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n    \"subject\": \"<The subject of the email that is sent as a notification to the recipient.>\",\n    \"note\": \"<A note to the payer.>\",\n    \"send_to_recipient\": true,\n    \"send_to_invoicer\": false\n}");

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        $headers[] = 'Paypal-Request-Id: d3da0ee4-cf1f-4e22-99c0-043807e33682';
        $headers[] = 'Authorization: Bearer ' . $token;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            return false;
        }
        curl_close($ch);

        return $result;
    }
}